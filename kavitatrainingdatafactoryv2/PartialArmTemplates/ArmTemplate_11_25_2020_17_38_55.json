{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "kavitatrainingdatafactoryv2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/KavitaOrderBlobsProcessor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this pipeline would process incoming internet order blob files",
				"activities": [
					{
						"name": "Load Processable Blobs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetProcessableBlobs]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "KavitaBlobMetadataDataSet",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Processable Blobs",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load Processable Blobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Load Processable Blobs').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Prepare DLS Target Info",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "DLSTargetProvider",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@concat('{\"blobPath\":\"', item().Path, '\", \"blobName\":\"', item().BlobName, '\"}')",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "DLSproviderFunctionConnection",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy Blob Storage to DLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Prepare DLS Target Info",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderid",
														"type": "Int32",
														"physicalType": "String"
													},
													"sink": {
														"name": "orderid",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "orderdate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "orderdate",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customer",
														"type": "Int32",
														"physicalType": "String"
													},
													"sink": {
														"name": "customer",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product",
														"type": "Int32",
														"physicalType": "String"
													},
													"sink": {
														"name": "product",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "units",
														"type": "Int32",
														"physicalType": "String"
													},
													"sink": {
														"name": "units",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "billingaddress",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "billingaddress",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OrdersBlobStorageDataSet",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@activity('Prepare DLS Target Info').output.containerName",
													"type": "Expression"
												},
												"folder": {
													"value": "@activity('Prepare DLS Target Info').output.path",
													"type": "Expression"
												},
												"fileName": {
													"value": "@activity('Prepare DLS Target Info').output.blobName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "OrganizedOrdersDLSDataSet",
											"type": "DatasetReference",
											"parameters": {
												"fileSystemName": "organized-data",
												"folder": {
													"value": "@activity('Prepare DLS Target Info').output.targetOrganizedFullPath",
													"type": "Expression"
												},
												"fileName": {
													"value": "@activity('Prepare DLS Target Info').output.targetOrganizedFileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Blob Meta Data",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Blob Storage to DLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspUpdateBlobMetadata]",
										"storedProcedureParameters": {
											"dlsLocation": {
												"value": {
													"value": "@concat(activity('Prepare DLS Target Info').output.targetOrganizedFullPath, '/', activity('Prepare DLS Target Info').output.targetOrganizedFileName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"recordId": {
												"value": {
													"value": "@item().RecordId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "KavitaBlobMetaDataSqlConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSproviderFunctionConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DLSproviderFunctionConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://dlstargetprovider20201125040523.azurewebsites.net/",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KavitaTrainingKeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "functionkey"
					}
				}
			},
			"dependsOn": []
		}
	]
}